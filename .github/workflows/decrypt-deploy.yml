name: Decrypt secrets and Deploy to Vercel

on:
  push:
    branches: [main, master]

jobs:
  decrypt-build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install sops/age and python deps
        run: |
          sudo apt-get update -y
          sudo apt-get install -y curl python3 python3-pip jq || true
          pip3 install pyyaml || true

          # ensure age exists (try apt, ignore error)
          if ! command -v age >/dev/null 2>&1; then
            sudo apt-get install -y age || true
          fi

          # install sops by downloading latest linux amd64 release asset
          ASSET_URL=$(curl -s https://api.github.com/repos/getsops/sops/releases/latest \
            | grep browser_download_url | grep -iE 'linux(.|_|-)?amd64|x86_64' | head -n1 | cut -d '"' -f4)
          if [ -z "$ASSET_URL" ]; then
            echo "ERROR: could not find sops linux amd64 asset"; exit 1
          fi
          curl -L --fail -o /tmp/sops "$ASSET_URL"
          chmod +x /tmp/sops
          sudo mv /tmp/sops /usr/local/bin/sops

          sops --version || true
          age --version || true

      - name: Prepare age key
        env:
          SOPS_AGE_PRIVATE_KEY: ${{ secrets.SOPS_AGE_PRIVATE_KEY }}
        run: |
          if [ -z "$SOPS_AGE_PRIVATE_KEY" ]; then echo "SOPS_AGE_PRIVATE_KEY not set"; exit 1; fi
          printf '%s\n' "$SOPS_AGE_PRIVATE_KEY" > /tmp/age.key
          chmod 600 /tmp/age.key
          export SOPS_AGE_KEY_FILE=/tmp/age.key
          echo "age key written to /tmp/age.key"

      - name: Decrypt secrets -> .env.production
        env:
          SOPS_AGE_PRIVATE_KEY: ${{ secrets.SOPS_AGE_PRIVATE_KEY }}
        run: |
          export SOPS_AGE_KEY_FILE=/tmp/age.key
          sops --decrypt --input-type yaml --output-type dotenv pages/secrets/secrets.yaml.enc > .env.production
          ls -la .env.production
          sed -n '1,30p' .env.production || true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Build (use decrypted env)
        env:
          NODE_ENV: production
        run: |
          set -o allexport
          source .env.production || tr          // ...existing code...
                - name: Install sops/age and python deps
                  run: |
                    sudo apt-get update -y
                    sudo apt-get install -y curl python3 python3-pip jq || true
                    pip3 install pyyaml || true

                    # ensure age exists (try apt, ignore error)
                    if ! command -v age >/dev/null 2>&1; then
                      sudo apt-get install -y age || true
                    fi

                    # install sops by downloading latest linux amd64 release asset
                    ASSET_URL=$(curl -s https://api.github.com/repos/getsops/sops/releases/latest \
                      | grep browser_download_url | grep -iE 'linux(.|_|-)?amd64|x86_64' | head -n1 | cut -d '"' -f4)
                    if [ -z "$ASSET_URL" ]; then
                      echo "ERROR: could not find sops linux amd64 asset"; exit 1
                    fi
                    curl -L --fail -o /tmp/sops "$ASSET_URL"
                    chmod +x /tmp/sops
                    sudo mv /tmp/sops /usr/local/bin/sops

                    sops --version || true
                    age --version || true
          // ...existing code...ue
          set +o allexport
          npm ci
          npm run build

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v41.1.4
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: "--prod"
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
