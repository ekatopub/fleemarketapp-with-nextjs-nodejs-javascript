name: Decrypt secrets and Deploy to Vercel

on:
  push:
    branches: [main]

jobs:
  decrypt-build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install sops and python deps
        run: |
          sudo apt-get update -y
          sudo apt-get install -y python3 python3-pip curl
          pip3 install pyyaml
          # install sops binary
          curl -L --fail -o /tmp/sops "$(curl -s https://api.github.com/repos/mozilla/sops/releases/latest | grep browser_download_url | grep linux | head -n1 | cut -d '"' -f4)" || true
          if [ -f /tmp/sops ]; then chmod +x /tmp/sops && sudo mv /tmp/sops /usr/local/bin/sops || true; fi
          sops --version || true

      - name: Prepare age key
        env:
          SOPS_AGE_PRIVATE_KEY: ${{ secrets.SOPS_AGE_PRIVATE_KEY }}
        run: |
          echo "$SOPS_AGE_PRIVATE_KEY" > /tmp/age.key
          chmod 600 /tmp/age.key
          export SOPS_AGE_KEY_FILE=/tmp/age.key

      - name: Decrypt secrets -> .env.production
        env:
          SOPS_AGE_PRIVATE_KEY: ${{ secrets.SOPS_AGE_PRIVATE_KEY }}
        run: |
          export SOPS_AGE_KEY_FILE=/tmp/age.key
          # 明示的に YAML として復号
          sops -d --input-type yaml pages/secrets/secrets.yaml.enc > /tmp/secrets.dec.yaml

          python3 - <<'PY'
            import yaml
            data = yaml.safe_load(open('/tmp/secrets.dec.yaml')) or {}
            def q(v):
                s = str(v).replace('\\','\\\\').replace('"','\\"')
                return f'"{s}"'
            with open('.env.production','w') as f:
                for k,v in data.items():
                    f.write(f'{k}={q(v)}\n')
          PY
          ls -la .env.production
          sed -n '1,20p' .env.production || true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Build (use decrypted env)
        env:
          NODE_ENV: production
        run: |
          set -o allexport
          source .env.production || true
          set +o allexport
          npm ci
          npm run build

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v23
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: "--prod"
